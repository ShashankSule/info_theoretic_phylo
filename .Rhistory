sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 16,
sites = 1000,
model = 6,
parameters = "5 5",
gamma = "0.5 4",
mutation = 3.5,
equilibrium = "0.25 0.28 0.34 0.13",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 5,
sites = 2000,
model = 0,
parameters = "",
gamma = "1.0 1",
mutation = 6.5,
sampling= 0.5,
equilibrium = "0.25 0.25 0.25 0.25",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
image.DNAbin(as.DNAbin(sequences[[1]]))
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 5,
sites = 2000,
model = 0,
parameters = "",
gamma = "0 0",
mutation = 6.5,
sampling= 0.5,
equilibrium = "0.25 0.25 0.25 0.25",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 5,
sites = 2000,
model = 0,
parameters = "",
kappa = 1,
gamma = "0 0",
mutation = 6.5,
sampling= 0.5,
equilibrium = "0.25 0.25 0.25 0.25",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 5,
sites = 2000,
model = 0,
parameters = "1",
gamma = "0 0",
mutation = 6.5,
sampling= 0.5,
equilibrium = "0.25 0.25 0.25 0.25",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 6,
sites = 2000,
model = 0,
parameters = "1",
gamma = "0 0",
mutation = 1.5,
sampling= 0.3,
equilibrium = "0.25 0.25 0.25 0.25",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
plot(read.tree(text = "(((1, (2, 5)), 6), 3, 4);"))
plot(read.tree(text = trees[[1]]))
plot(read.tree(text = "(((1, (2, 5)), 6), 3, 4);"))
prod_tree <- read.tree(text = "(((1, (2, 5)), 6), 3, 4);")
RobinsonFoulds(prod_tree, read.tree(text = trees[[1]]))
prod_tree
attributes(prod_tree)
prod_tree$tip.label <- paste("S", prod_tree$tip.label)
plot(prod_tree)
prod_tree <- read.tree(text = "(((1, (2, 5)), 6), 3, 4);")
prod_tree$tip.label <- paste("S", prod_tree$tip.label, sep = "")
plot(prod_tree)
orig_tree <- read.tree(text = trees[[1]])
RobinsonFoulds(prod_tree, orig_tree)
plot(orig_tree)
plot(prod_tree)
plot(orig_tree)
dist.dna(as.DNAbin.character(sequences[[1]]), model = "JC69")
dist.dna(as.DNAbin.character(sequences[[1]]), model = "TN93")
dist.dna(as.DNAbin.character(sequences[[1]]))
dist.dna(as.DNAbin.character(sequences[[1]]), model = "JC69")
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 6,
sites = 2000,
model = 0,
parameters = "1",
gamma = "0 0",
mutation = 1.5,
sampling= 0.3,
equilibrium = "0.25 0.25 0.25 0.25",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
orig_tree <- read.tree(text = trees[[1]])
prod_tree <- read.tree(text = (((1, 5), 2), (3, 6), 4);)
prod_tree <- read.tree(text = "(((1, 5), 2), (3, 6), 4);")
plot(prod_tree)
plot(orig_tree)
plot(prod_tree)
RobinsonFoulds(orig_tree, prod_tree)
prod_tree$tip.label <- paste("S", prod_tree$tip.label, sep = "")
RobinsonFoulds(orig_tree, prod_tree)
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 6,
sites = 2000,
model = 0,
parameters = "1",
gamma = "0 0",
mutation = 1.0,
sampling= 0.3,
equilibrium = "0.25 0.25 0.25 0.25",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
image(as.DNAbin.character(sequences[[1]]))
prod_tree <- read.tree(text = "(((S1, S5), (S3, S4)), S2, S6);")
orig_tree <- read.tree(text = trees[[1]])
RobinsonFoulds(prod_tree, orig_tree)
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 6,
sites = 1000,
model = 0,
parameters = "1",
gamma = "0 0",
mutation = 1.0,
sampling= 0.3,
equilibrium = "0.25 0.25 0.25 0.25",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
image.DNAbin(as.DNAbin.character(sequences[[1]]))
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 6,
sites = 1000,
model = 0,
parameters = "1",
gamma = "0 0",
mutation = 1.0,
sampling= 0.3,
equilibrium = "0.25 0.25 0.25 0.25",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
trial_sequence <- as.numeric(as.factor(sequence[[1]])) - matrix(1,6,1000)
trial_sequence <- as.numeric(as.factor(sequences[[1]])) - matrix(1,6,1000)
seq_names <- rownames(sequences[[1]])
opts <- paml.baseml.control(noisy = 3, verbose = 1, runmode = 2, model = 0,
ndata = 1, clock = 0, fix_kappa = 1, kappa = 1,
fix_alpha = 1, alpha = 0, ncatG = 0)
opts
paml.baseml(trial_sequence, seqname = seq_names,
opts = opts)
trees[[1]]
num_sequence <- 100
trees <- list(num_sequence)
divisive <- list(num_sequence)
sequences <- list(num_sequence)
# agg_trees <- list(num_sequence)
# nj_trees <- list(num_sequence)
#read the original trees
for(i in c(1:num_sequence)){
filename <- paste("./TN93_Jul21/Trees/tree", i, ".txt", sep = "")
trees[[i]] <- readChar(filename, file.info(filename)$size)
}
#read the divisive trees
for(i in c(1:num_sequence)){
filename <- paste("./TN93_Jul21/DivisiveTrees/tree", i, ".txt", sep = "")
divisive[[i]] <- readChar(filename, file.info(filename)$size)
}
divisive <- lapply(divisive,  function(x) paste(x,";", sep = ""))
for(i in c(1:num_sequence)){
filename <- paste("./TN93_Jul21/Sequences/sequence", i, ".nex", sep = "")
sequences[[i]] <- ReadCharacters(filename)
}
sequences[[1]]
trial_sequence <- sequences[[1]]
seq_names <- rownames(sequences[[1]])
write.nexus.data(trial_sequence)
write.nexus.data(trial_sequence, file = "mc.nex")
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
write.nexus.data(trial_sequence, file = "mc.nex")
?write.nexus.data
write.nexus.data(trial_sequence, file = "mc.nex", interleaved = FALSE)
prod_tree <- read.tree(text = "((((1, (4, 13)), 2), (6, 10)), (((3, 9), (((8, (11, 12)), 16), 15)), ((5, 14), 7)));")
prod_tree$tip.label <- paste("S", prod_tree$tip.label)
write.tree(prod_tree)
prod_tree <- read.tree(text = "((((1, (4, 13)), 2), (6, 10)), (((3, 9), (((8, (11, 12)), 16), 15)), ((5, 14), 7)));")
prod_tree$tip.label <- paste("S", prod_tree$tip.label, sep = "")
write.tree(prod_tree)
trees[[1]]
orig_tree <- read.tree(text = trees[[1]])
RobinsonFoulds(orig_tree, prod_tree)
nj_trees <- sequences %>%
lapply(as.DNAbin) %>%
lapply(dist.dna, model = "TN93", base.freq = c(0.34, 0.28, 0.13, 0.25)) %>%
lapply(nj) %>%
lapply(write.tree)
data <- data.frame(as.character(trees), as.character(divisive), as.character(nj_trees))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
# agg_distance <- mapply(RobinsonFoulds,
#        lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
#        lapply(data$as.character.agglomerative., function(x) read.tree(text = as.character(x))))
nj_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))))
# diagnostics <- data.frame(as.character(div_distance),
#                           as.character(agg_distance),
#                           as.character(nj_distance))
div_distance
nj_distance
# div_mean <- diagnostics$as.character.div_distance. %>%
#             as.character() %>%
#             as.numeric() %>%
#             mean()
# agg_mean <- diagnostics$as.character.agg_distance. %>%
#             as.character() %>%
#             as.numeric() %>%
#             mean()
# nj_mean <-  diagnostics$as.character.nj_distance. %>%
#             as.character() %>%
#             as.numeric() %>%
#             mean()
print(div_distance)
print(paste("Mean distance of divisive trees from original: ", mean(div_distance), sep = ""))
print(paste("The proportion of divisive trees has 0 RF distance from the original tree is: ", sum(div_distance == 0) / num_sequence, sep = ""))
hist(div_distance)
print(nj_distance)
print(paste("Mean distance of nj trees from original: ", mean(nj_distance), sep = ""))
print(paste("The proportion of nj trees has 0 RF distance from the original tree is: ", sum(nj_distance == 0) / num_sequence, sep = ""))
hist(nj_distance)
summary(nj_distance)
var(nj_distance)
# print(paste("Mean distance of divisive trees from original: ", div_mean, sep = ""))
# print(paste("Mean distance of agglomerative trees from original: ", agg_mean, sep = ""))
# print(paste("Mean distance of NJ trees from original: ", nj_mean, sep = ""))
trial_sequence <- sequences[[97]]
write.nexus.data(trial_sequence, file = "mc.nex", interleaved = FALSE)
prod_tree <- read.tree(text = "(((1, (5, 13)), (((3, ((12, 14), 16)), (4, (7, ((9, 15), 11)))), 10)), ((2, 6), 8));")
prod_tree$tip.label <- paste("S", prod_tree$tip.label, sep = "")
orig_tree <- read.tree(text = trees[[97]])
RobinsonFoulds(prod_tree, orig_tree)
trial_sequence <- sequences[[98]]
write.nexus.data(trial_sequence, file = "mc.nex", interleaved = FALSE)
prod_tree <- read.tree(text = "((((1, 11), ((7, 14), 9)), (2, ((4, 15), 16))), (((3, (6, 8)), 12), (5, (10, 13))));")
prod_tree$tip.label <- paste("S", prod_tree$tip.label, sep = "")
orig_tree <- read.tree(text = trees[[98]])
RobinsonFoulds(prod_tree, orig_tree)
?TreeDist
knitr::opts_knit$set(root.dir = '/Users/shashanksule/Documents/info_theoretic_phylo/')
library("adegenet")
library("ape")
library("apTreeshape")
library("BoSSA")
library("diversitree")
library("pegas")
library("phangorn")
library("phylobase")
#library("phyloch")
library("seqinr")
library("readr")
source("utilities.R")
library("progress")
library("ggplot2")
library("phyclust")
library("TreeDist")
library("TreeTools")
library("dplyr")
library("parallel")
library("adephylo")
library("profvis")
t <- rtreeshape(1,9,model = "yule")
plot(as.phylo(t[[1]]))
title("Original Tree")
seqs <- simSeq(as.phylo(t[[1]]),l=12, type = "DNA")
image(as.DNAbin(seqs))
seqs <- simSeq(as.phylo(t[[1]]),l=1, type = "DNA")
image(as.DNAbin(seqs))
plot(read.tree(text = paste(infotree(as.character.DNAbin(seqs)),";", sep = "")))
as.character.DNAbin(as.DNAbin(seqs))
plot(read.tree(text = paste(infotree(as.character.DNAbin(as.DNAbin(seqs))),";", sep = "")))
press_half <- as.character.DNAbin(read.dna("press_codes.phy"))[1:8,]
plot(read.tree(text = paste(infotree(press_half), ";", sep = "")))
2^15 -1
sequence <- read.nexus.data("./TN93_Jul21/Sequences/sequence1.nex")
partition <- splitset(16)[245,]
sequence
class(sequence)
sequence <- read.nexus("./TN93_Jul21/Sequences/sequence1.nex")
sequence <- ReadCharacters("./TN93_Jul21/Sequences/sequence1.nex")
partition <- splitset(16)[245,]
system.time(info_gain(partition, sequence))
0.1*32767
/60
3276.7/60
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
system.time(info_gain(partition, sequence))
start<- Sys.time()
info_gain(partition, sequence)
end <- Sys.time()
print(end - start)
start<- Sys.time()
info_gain(partition, sequence)
end <- Sys.time()
print(end - start)
start<- Sys.time()
info_gain(partition, sequence)
end <- Sys.time()
print(end - start)
32767*0.2
6553/60
site_data <- sequence[3,]
start <- Sys.time()
table(site_data)
end <- Sys.time()
print(end - start)
dim(sequence)
site_data <- sequence[,3]
start <- Sys.time()
table(site_data)
end <- Sys.time()
print(end - start)
site_data <- sequence[,5]
start <- Sys.time()
table(site_data)
end <- Sys.time()
print(end - start)
start <- Sys.time()
base.freq(as.DNAbin(sequence), all = TRUE)[c("a", "c", "g", "t", "-")]
end <- Sys.time()
print(end - start)
start <- Sys.time()
table(site_data)
end <- Sys.time()
print(end - start)
start <- Sys.time()
base.freq(as.DNAbin(sequence), all = TRUE)[c("a", "c", "g", "t", "-")]
end <- Sys.time()
print(end - start)
start <- Sys.time()
table(site_data)
end <- Sys.time()
print(end - start)
start <- Sys.time()
base.freq(as.DNAbin(sequence), all = TRUE)[c("a", "c", "g", "t", "-")]
end <- Sys.time()
print(end - start)
site_data <- sequence[,9]
start <- Sys.time()
table(site_data)
end <- Sys.time()
print(end - start)
start <- Sys.time()
base.freq(as.DNAbin(sequence), all = TRUE)[c("a", "c", "g", "t", "-")]
end <- Sys.time()
print(end - start)
site_data <- sequence[,9]
start <- Sys.time()
table(site_data)
end <- Sys.time()
print(end - start)
start <- Sys.time()
base.freq(as.DNAbin(sequence), all = TRUE)[c("a", "c", "g", "t", "-")]
end <- Sys.time()
print(end - start)
start <- Sys.time()
base.freq(as.DNAbin(sequence), all = TRUE)
end <- Sys.time()
print(end - start)
start <- Sys.time()
base.freq(as.DNAbin(sequence))
end <- Sys.time()
print(end - start)
start <- Sys.time()
table(site_data)
end <- Sys.time()
print(end - start)
start <- Sys.time()
info_gain_codon_site(site_data, as.logical(partition))
end <- Sys.time()
print(end - start)
start <- Sys.time()
info_gain(as.logical(partition), site_data)
start <- Sys.time()
info_gain_site(as.logical(partition), site_data)
start <- Sys.time()
info_gain_site(site_data, as.logical(partition))
end <- Sys.time()
print(end - start)
site_data <- sequence[,9]
start <- Sys.time()
info_gain_codon_site(site_data, as.logical(partition))
end <- Sys.time()
print(end - start)
start <- Sys.time()
info_gain_site(site_data, as.logical(partition))
end <- Sys.time()
print(end - start)
