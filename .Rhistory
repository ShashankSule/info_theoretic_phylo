plot(nj(M)); axisPhylo()
library("adegenet")
library("ape")
library("apTreeshape")
library("BoSSA")
library("diversitree")
library("pegas")
library("phangorn")
library("phylobase")
#library("phyloch")
library("seqinr")
source("utilities.R")
library("ggplot2")
library("phyclust")
library("TreeDist")
library("TreeTools")
library("dplyr")
trees <- list()
sequences <- list()
for(i in 1:100){
who_dat(seqs = 12,
sites = 1000,
model = 6,
parameters = "5 5",
gamma = "0.5 4",
equilibrium = "0.25 0.28 0.34 0.13")
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
#trials <- c(1:100)
divisive <- lapply(lapply(sequences, infotree), function(x) paste(x,";", sep = ""))
divisive <- lapply(lapply(sequences, infotree), function(x) paste(x,";", sep = ""))
infotree(sequences[[1]])
trees <- list()
sequences <- list()
for(i in 1:100){
who_dat(seqs = 10,
sites = 1000,
model = 6,
parameters = "5 5",
gamma = "0.5 4",
equilibrium = "0.25 0.28 0.34 0.13")
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
#trials <- c(1:100)
start <- system.time()
Sys.time()
Sys.time()
start <- Sys.time()
finish <- Sys.time()
finish - start
class(finish - start)
print(finish - start)
#trials <- c(1:100)
start <- Sys.time()
divisive <- lapply(lapply(sequences, infotree), function(x) paste(x,";", sep = ""))
finish <- Sys.time()
print(finish - start)
for(i in 1:100){ write.nexus.data(sequences[[i]], file = paste("TN93_100/16_Jul7_",i,".nex", sep = ""))}
write.nexus.data(sequences[[i]], file = "juju.nex")
getwd()
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
system("mkdir TN93_Jul7")
system("ls")
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/TN93_Jul7/")
for(i in 1:100){ write.nexus.data(sequences[[i]],
file = paste("TN93_100/16_Jul7_",i,".nex", sep = ""))}
for(i in 1:100){ write.nexus.data(sequences[[i]],
file = paste("100/16",i,".nex", sep = ""))}
write.nexus.data(sequences[[1]], file = "100/16_1")
?write.nexus.data()
write.nexus.data(sequences[[1]], file = "100/16_1.nex")
write.nexus.data(sequences[[1]], file = "100_16_1.nex")
for(i in 1:100){ write.nexus.data(sequences[[i]],
file = paste("100_16_",i,".nex", sep = ""))}
agglomerative <- lapply(lapply(sequences, agg_clustering), function(x) paste(x,";", sep = ""))
divisive <- lapply(divisive, function(x) paste(x, ";", sep = ""))
View(divisive)
divisive[[1]]
?lapply()
lapply(divisive, function(x) substr(x, 1, nchar(x) - 1)))
lapply(divisive, function(x) substr(x, 1, nchar(x) - 1))
paste("A", 1:6, sep = "")
lapply(function(x,y){write(x,file = y)}, divisive, paste("TN93_Jul7/100_16", 1:100, ".txt", sep = ""))
mapply(function(x,y){write(x,file = y)}, divisive, paste("TN93_Jul7/100_16", 1:100, ".txt", sep = ""))
getwd()
for(i in 1:100){write(divisive[[i]], file = paste("100_16_",i,".txt",sep = ""))}
# start <- Sys.time()
# agglomerative <- lapply(lapply(sequences, agg_clustering), function(x) paste(x,";", sep = ""))
# finish <- Sys.time()
agglomerative <- list(100)
pb = txtProgressBar(min = 0, max = 100, initial = 0)
for(i in 1:100){
agglomerative[[i]] <- paste(agg_clustering(sequences[[i]]), ";", sep = "");
print(paste("Current iterate:", i))
}
# start <- Sys.time()
# agglomerative <- lapply(lapply(sequences, agg_clustering), function(x) paste(x,";", sep = ""))
# finish <- Sys.time()
agglomerative <- list(100)
pb = txtProgressBar(min = 0, max = 100, initial = 0)
for(i in 1:100){
agglomerative[[i]] <- invisible(paste(agg_clustering(sequences[[i]]), ";", sep = ""))
setTxtProgressBar(pb,i)
}
source("utilities.R")
# start <- Sys.time()
# agglomerative <- lapply(lapply(sequences, agg_clustering), function(x) paste(x,";", sep = ""))
# finish <- Sys.time()
agglomerative <- list(100)
pb = txtProgressBar(min = 0, max = 100, initial = 0)
for(i in 1:100){
agglomerative[[i]] <- invisible(paste(agg_clustering(sequences[[i]]), ";", sep = ""))
setTxtProgressBar(pb,i)
}
}
View(agglomerative)
nj_trees <- sequences %>%
lapply(as.DNAbin) %>%
lapply(dist.dna) %>%
lapply(nj) %>%
lapply(write.tree)
data <- data.frame(as.character(trees), as.character(divisive), as.character(agglomerative),
as.character(nj_trees))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
View(data)
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
source("utilities.R")
View(divisive)
divisive[[1]]
class(divisive[[1]])
for(i in 1:100){ divisive[[i]] <- substr(divisive[[i]], 1, nchar(divisive[[i]])-1)}
divisive
View(agglomerative)
data <- data.frame(as.character(trees), as.character(divisive), as.character(agglomerative),
as.character(nj_trees))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
agg_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.agglomerative., function(x) read.tree(text = as.character(x))))
nj_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))))
diagnostics <- data.frame(as.character(div_distance),
as.character(agg_distance),
as.character(nj_distance))
div_mean <- diagnostics$as.character.div_distance. %>%
as.character() %>%
as.numeric() %>%
mean()
agg_mean <- diagnostics$as.character.agg_distance. %>%
as.character() %>%
as.numeric() %>%
mean()
nj_mean <-  diagnostics$as.character.nj_distance. %>%
as.character() %>%
as.numeric() %>%
mean()
print(paste("Mean distance of divisive trees from original: ", div_mean, sep = ""))
print(paste("Mean distance of agglomerative trees from original: ", agg_mean, sep = ""))
print(paste("Mean distance of NJ trees from original: ", nj_mean, sep = ""))
metricity <- data
metricity[] <- metricity %>%
lapply(function(x) is.ultrametric(read.tree(text = as.character(x))))
metricity <- data[,c(1,2,4)]
metricity[] <- metricity %>%
lapply(function(x) is.ultrametric(read.tree(text = as.character(x))))
summary(metricity)
low_metricity <- data
low_metricity[] <- low_metricity %>%
lapply(function(x) is.ultrametric(read.tree(text = as.character(x)), tol = 1e-2))
low_metricity <- data[,c(1,2,4)]
low_metricity[] <- low_metricity %>%
lapply(function(x) is.ultrametric(read.tree(text = as.character(x)), tol = 1e-2))
summary(low_metricity)
print("Tolerance used: 1e-2")
rel_distances <- list(99)
for(i in 1:99){
rel_distances <- RobinsonFoulds(read.tree(text = trees[[i]]), read.tree(text = trees[[i+1]]))
}
summary(rel_distances)
trees
RobinsonFoulds(read.tree(text = trees[[1]]), read.tree(text = trees[[2]]))
RobinsonFoulds(read.tree(text = trees[[2]]), read.tree(text = trees[[3]]))
RobinsonFoulds(read.tree(text = trees[[3]]), read.tree(text = trees[[4]]))
RobinsonFoulds(read.tree(text = trees[[4]]), read.tree(text = trees[[5]]))
RobinsonFoulds(read.tree(text = trees[[3]]), read.tree(text = trees[[5]]))
RobinsonFoulds(read.tree(text = trees[[2]]), read.tree(text = trees[[6]]))
RobinsonFoulds(read.tree(text = trees[[1]]), read.tree(text = trees[[6]]))
summary(rel_distances)
plot(read.tree(text = trees[[1]]))
plot(read.tree(text = trees[[2]]))
plot(read.tree(text = trees[[3]]))
plot(read.tree(text = trees[[4]]))
plot(read.tree(text = trees[[5]]))
plot(read.tree(text = trees[[6]]))
plot(read.tree(text = trees[[7]]))
rep(0,100)
rel_distances <- matrix(rep(0,1e4), nrow = 10)
rel_distances <- matrix(rep(0,1e4), nrow = 100)
for(i in 1:99){
for(j in (i+1):100)
rel_distances[i,j] <- RobinsonFoulds(read.tree(text = trees[[i]]), read.tree(text = trees[[j]]))
}
rel_distances
par(mar = rep(0, 4))
image(rel_distances, useRaster = TRUE, axes = FALSE)
par(mar = rep(0, 4))
image(rel_distances, useRaster = TRUE)
par(mar = rep(0, 4))
plot.matrix(rel_distances)
install.packages("plot.matrix")
library(plot.matrix)
par(mar = rep(0, 4))
plot(rel_distances)
par(mar=c(5.1, 4.1, 4.1, 4.1))
plot(rel_distances)
par(mar=c(5.1, 4.1, 4.1, 4.1))
plot(rel_distances[1:50,1:50])
?dist.dna()
library("adegenet")
library("ape")
library("apTreeshape")
library("BoSSA")
library("diversitree")
library("pegas")
library("phangorn")
library("phylobase")
#library("phyloch")
library("seqinr")
library("readr")
source("utilities.R")
library("ggplot2")
library("phyclust")
library("TreeDist")
library("TreeTools")
library("dplyr")
?dist.dna()
?cophenetic()
install.packages("trex")
?cophenetic()
?all.equal()
library("adegenet")
library("ape")
library("apTreeshape")
library("BoSSA")
library("diversitree")
library("pegas")
library("phangorn")
library("phylobase")
#library("phyloch")
library("seqinr")
library("readr")
source("utilities.R")
library("progress")
library("ggplot2")
library("phyclust")
library("TreeDist")
library("TreeTools")
library("dplyr")
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 100
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 16,
sites = 1000,
model = 6,
parameters = "5 5",
gamma = "0.5 4",
mutation = 3.5,
equilibrium = "0.25 0.28 0.34 0.13",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
getwd()
getwd()
setwd(paste(getwd(), "/TN93_Jul21/"))
setwd(paste(getwd(), "/TN93_Jul21/", sep = ""))
getwd()
getwd()
tree_names <- paste("/TN93_Jul21/Trees/tree", 1:100, ".txt", sep = "")
seed_names <- paste("/TN93_Jul21/Seeds/seed", 1:100, ".txt", sep = "")
seqs_names <- paste("/TN93_Jul21/Trees/tree", 1:100, ".nex", sep = "")
seqs_names
seqs_names
seqs_names <- paste("/TN93_Jul21/Sequences/tree", 1:100, ".nex", sep = "")
seqs_names
?mapply()
tree_names <- paste(getwd(), "/TN93_Jul21/Trees/tree", 1:100, ".txt", sep = "")
seed_names <- paste(getwd(), "/TN93_Jul21/Seeds/seed", 1:100, ".txt", sep = "")
seqs_names <- paste(getwd(), "/TN93_Jul21/Sequences/sequence", 1:100, ".nex", sep = "")
seed_names
seqs_names
mapply(function(x,y) write(x,file = y), trees, tree_names)
mapply(function(x,y) write(x, file = y), seeds, seed_names)
mapply(function(x,y) write.nexus.data(x, file = y), sequences, seqs_names)
(6 + 2) ? 5
(6 + 2) > 5
!((6+2) > 5)
((6+2) > 5) && ((9 + 9) > 81)
((6+2) > 5) &&
((9 + 9) > 81)
library("adegenet")
library("ape")
library("apTreeshape")
library("BoSSA")
library("diversitree")
library("pegas")
library("phangorn")
library("phylobase")
#library("phyloch")
library("seqinr")
library("readr")
source("utilities.R")
library("progress")
library("ggplot2")
library("phyclust")
library("TreeDist")
library("TreeTools")
library("dplyr")
sampletree <- read.tree(text = "(1:3, (2:1, 3:1):2);")
plot(sampletree)
is.ultrametric(cophenetic.phylo(sampletree))
cophenetic.phylo(sampletree)
as.dist(cophenetic.phylo(sampletree))
is.ultrametric(as.dist)
is.ultrametric(as.dist(cophenetic.phylo(sampletree)))
is.ultrametric(sampletree)
is.additive(sampletree)
is_additive(sampletree)
attributes(sampletree)
sampletree$Nnode
sampletree$tip.label
length(sampletree$tip.label)
source("utilities.R")
is_additive(sampletree)
sampletree <- read.tree(text = "(1:4, (2:2,(3:1,4:1):1):2);")
plot(sampletree)
is.ultrametric(sampletree)
is_additive(sampletree)
as.dist(cophenetic.phylo(sampletree))
tree <- sampletree
source("utilities.R")
is_additive(sampletree)
is_additive(sampletree)
source("utilities.R")
source("utilities.R")
is_additive(sampletree)
library("adegenet")
library("ape")
library("apTreeshape")
library("BoSSA")
library("diversitree")
library("pegas")
library("phangorn")
library("phylobase")
#library("phyloch")
library("seqinr")
library("readr")
source("utilities.R")
source("utilities.R")
library("progress")
library("ggplot2")
library("phyclust")
library("TreeDist")
library("TreeTools")
library("dplyr")
?dist.dna
?simSeq
library("adegenet")
library("ape")
library("apTreeshape")
library("BoSSA")
library("diversitree")
library("pegas")
library("phangorn")
library("phylobase")
#library("phyloch")
library("seqinr")
library("readr")
source("utilities.R")
source("utilities.R")
library("adegenet")
library("ape")
library("apTreeshape")
library("BoSSA")
library("diversitree")
library("pegas")
library("phangorn")
library("phylobase")
#library("phyloch")
library("seqinr")
library("readr")
source("utilities.R")
library("progress")
library("ggplot2")
library("phyclust")
library("TreeDist")
library("TreeTools")
library("dplyr")
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 16,
sites = 1000,
model = 6,
parameters = "5 5",
gamma = "0.5 4",
mutation = 3.5,
equilibrium = "0.25 0.28 0.34 0.13",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
is.ultrametric(read.tree(text = trees[[1]]))
n <- 1
trees <- list(n)
sequences <- list(n)
seeds <- list(n)
for(i in 1:n){
#Initialize the .dat file and store the seed
seeds[[i]] <- who_dat(seqs = 16,
sites = 1000,
model = 6,
parameters = "5 5",
gamma = "0.5 4",
mutation = 3.5,
equilibrium = "0.25 0.28 0.34 0.13",
spit_seed = TRUE)
#Simulate the trees and the sequences
system("paml4.8/src/evolverRandomTree 5 paml4.8/MCbaseRTree.dat")
trees[[i]] <- write.tree(read.nexus("mctrees.nex"))
sequences[[i]] <- ReadCharacters("mc.nex")
}
is.ultrametric(read.tree(text = trees[[1]]))
is_additive(read.tree(text = trees[[1]]))
write(trees[[1]], file = "counterexample.txt")
a = c(9, 3, 4)
sort(a)
?sort
sort(a, decreasing = FALSE)
sort(a, decreasing = TRUE)
sort(a, decreasing = TRUE)[1]
sort(a, decreasing = TRUE)[1] == sort(a, decreasing = TRUE)[2]
source("utilities.R")
is_additive(read.tree(text = trees[[1]]))
is.ultrametric(read.tree(text = trees[[1]]))
source("utilities.R")
is_additive(read.tree(text = trees[[1]]))
source("utilities.R")
output <- is_additive(read.tree(text = trees[[1]]))
source("utilities.R")
output <- is_additive(read.tree(text = trees[[1]]))
four_pt[1] != four_pt[2]
output[1] != output[2]
output[2]
as.numeric(output[1]) != as.numeric(output[2])
as.numeric(output[1]) == as.numeric(output[2])
identical(output[1], output[2])
tree <- read.tree(text = trees[[1]])
pair_distance <- cophenetic.phylo(tree)
class(pair_distance)
pair_distance
class(pair_distance[3,4])
pair_distance[3,3] == pair_distance[4,4]
pair_distance[3,4] == pair_distance[4,3]
source("utilities.R")
output <- is_additive(read.tree(text = trees[[1]]))
i<- 1
j <- 5
k <- 6
l <- 8
d_ij <- pair_distance[i,j]
d_ik <- pair_distance[i,k]
d_il <- pair_distance[i,l]
d_jk <- pair_distance[j,k]
d_jl <- pair_distance[j,l]
d_kl <- pair_distance[k,l]
four_pt <- sort(c(d_ij + d_kl, d_ik + d_jl, d_il + d_jk), decreasing = TRUE)
four_pt
class(four_pt)
four_pt[1]
four_pt[2]
four_pt[1] == four_pt[2]
all.equal(four_pt[1], four_pt[2])
source("utilities.R")
is_additive(tree)
is.ultrametric(tree)
source("utilities.R")
is_additive(tree)
output[1] > output[2]
