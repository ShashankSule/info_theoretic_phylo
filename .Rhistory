diagnostics$as.numeric.div_distance. + diagnostics$as.numeric.agg_distance.
prim <- diagnostics$as.numeric.div_distance. + diagnostics$as.numeric.agg_distance.
index <- which(diagnostics$as.numeric.div_distance. + diagnostics$as.numeric.agg_distance. == 0)
index
trr <- read.tree(text = divisive[[7]])
trr
trr$edge.length
edge.length(trr)
read.tree(text = divisive[[7]])$edge.length
read.tree(text = nj_trees[[7]])$edge.length
plot(read.tree(text = nj_trees[[7]])$edge.length, read.tree(text = divisive[[7]])$edge.length)
index
plot(read.tree(text = nj_trees[[10]])$edge.length, read.tree(text = divisive[[10]])$edge.length)
plot(read.tree(text = nj_trees[[34]])$edge.length, read.tree(text = divisive[[34]])$edge.length)
length(index)
?plot()
plot()
plot(0,0)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
lines(nj_lengths, d_lengths,col = cl[i],type = 'b')
}
plot(0,0, xlim = c(0,1), ylim = c(0,1), type = "n")
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
lines(nj_lengths, d_lengths,col = cl[i],type = 'b')
}
for(i in index){print(i)}
plot(0,0, xlim = c(0,0.5), ylim = c(0,0.5), type = "n")
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
lines(nj_lengths, d_lengths,col = cl[i],type = 'b')
}
lines(nj_lengths, d_lengths)
plot(0,0,xlim = c(-10,10),ylim = c(-10,10),type = "n")
cl <- rainbow(5)
for (i in 1:5){
lines(-10:10,runif(21,-10,10),col = cl[i],type = 'b')
}
plot(0,0,xlim = c(-10,10),ylim = c(-10,10),type = "n")
cl <- rainbow(5)
for (i in 1:5){
lines(-10:10,runif(21,-10,10),col = cl[i],type = 'b')
}
?lines()
plot(0,0, xlim = c(0,0.5), ylim = c(0,0.5), type = "n")
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths,col = cl[i],type = 'b')
}
plot(0,0, xlim = c(0,0.5), ylim = c(0,0.5), type = "n")
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
lines(nj_lengths, d_lengths,col = cl[i],type = 'b')
}
index[1]
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths,type = 'b')
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
points(nj_lengths, d_lengths,type = 'b')
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
scatter(nj_lengths, d_lengths)
class(nj_lengths)
class(d_lengths)
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
points(nj_lengths, d_lengths,col = cl[i])
}
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
points(nj_lengths, d_lengths)
}
?points()
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
points(nj_lengths, d_lengths, col = cl[i])
}
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
points(nj_lengths, d_lengths)
}
getwd()
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
getwd)()
getwd()
read_file(paste(getwd(), "TN93_Jul7/DivisiveTrees/100_16_1.txt", sep = ""))
read_file(paste(getwd(), "/TN93_Jul7/DivisiveTrees/100_16_1.txt", sep = ""))
substr(read_file(paste(getwd(), "/TN93_Jul7/DivisiveTrees/100_16_1.txt", sep = "")),
1,
nchar(read_file(paste(getwd(), "/TN93_Jul7/DivisiveTrees/100_16_1.txt", sep = "")))-2)
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
read_file(paste(getwd(), "TN93_Jul7/DivisiveTrees/100_16_1.txt", sep = ""))
setwd("/Users/shashanksule/Documents/info_theoretic_phylo/")
d_file_names <- paste("/TN93/DivisiveTrees/100_16_",1:100,".txt", sep = "")
a_file_names <- paste("/TN93/DivisiveTrees/100_16_",1:100,".txt", sep = "")
install.packages("parallel")
install.packages("parallel")
library("parallel")
?mclapply
mc.cores
detectCores()
library("adegenet")
library("ape")
library("apTreeshape")
library("BoSSA")
library("diversitree")
library("pegas")
library("phangorn")
library("phylobase")
#library("phyloch")
library("seqinr")
library("readr")
source("utilities.R")
library("progress")
library("ggplot2")
library("phyclust")
library("TreeDist")
library("TreeTools")
library("dplyr")
divisive <- mclapply(d_file_names,
function(x) substr(read_file(paste(getwd(), x, sep = "")),
1,
nchar(read_file(paste(getwd(), x, sep = "")))-2))
divisive
d_file_names <- paste("/TN93_Jul7/DivisiveTrees/100_16_",1:100,".txt", sep = "")
a_file_names <- paste("/TN93_Jul7/DivisiveTrees/100_16_",1:100,".txt", sep = "")
divisive <- mclapply(d_file_names,
function(x) substr(read_file(paste(getwd(), x, sep = "")),
1,
nchar(read_file(paste(getwd(), x, sep = "")))-2))
divisive
substr(read_file(paste(getwd(), "/TN93_Jul7/AgglomerativeTrees/100_16_1.txt", sep = "")),
1,
nchar(read_file(paste(getwd(), "/TN93_Jul7/AgglomerativeTrees/100_16_1.txt", sep = "")))-1)
agglomerative <- mclapply(d_file_names,
function(x) substr(read_file(paste(getwd(), x, sep = "")),
1,
nchar(read_file(paste(getwd(), x, sep = "")))-1))
d_file_names <- paste("/TN93_Jul7/DivisiveTrees/100_16_",1:100,".txt", sep = "")
a_file_names <- paste("/TN93_Jul7/AgglomerativeTrees/100_16_",1:100,".txt", sep = "")
s_file_names <- paste("/TN93_Jul7/SequenceData/100_16_",1:100,".txt", sep = "")
divisive <- mclapply(d_file_names,
function(x) substr(read_file(paste(getwd(), x, sep = "")),
1,
nchar(read_file(paste(getwd(), x, sep = "")))-2))
agglomerative <- mclapply(d_file_names,
function(x) substr(read_file(paste(getwd(), x, sep = "")),
1,
nchar(read_file(paste(getwd(), x, sep = "")))-1))
nj_trees <- nj_trees <- sequences %>%
mclapply(as.DNAbin) %>%
mclapply(dist.dna) %>%
mclapply(nj) %>%
mclapply(write.tree)
remove(seqs)
data <- data.frame(as.character(divisive), as.character(agglomerative),
as.character(nj_trees))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
agg_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.agglomerative., function(x) read.tree(text = as.character(x))))
View(data)
agg_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.agglomerative., function(x) read.tree(text = as.character(x))))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
agglomerative
agglomerative <- mclapply(d_file_names,
function(x) substr(read_file(paste(getwd(), x, sep = "")),
1,
nchar(read_file(paste(getwd(), x, sep = "")))-2))
agglomerative
data <- data.frame(as.character(divisive), as.character(agglomerative),
as.character(nj_trees))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
agg_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.agglomerative., function(x) read.tree(text = as.character(x))))
# nj_distance <- mapply(RobinsonFoulds,
#        lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
#        lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))))
diagnostics <- data.frame(as.numeric(div_distance),
as.numeric(agg_distance))
index <- which(diagnostics$as.numeric.div_distance. + diagnostics$as.numeric.agg_distance. == 0)
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
index
View(diagnostics)
View(diagnostics)
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
nj_lengths
d_lengths <- read.tree(text = divisive[[i]])$edge.length
d_lengths
read.tree(text = divisive[[5]])$edge.length
read.tree(text = nj_trees[[5]])$edge.length
plot(read.tree(text = divisive[[5]]))
plot(read.tree(text = nj_trees[[5]]))
plot(read.tree(text = divisive[[5]]))
plot(read.tree(text = nj_trees[[5]]))
plot(read.tree(text = divisive[[5]]))
nj_trees <- nj_trees <- sequences %>%
mclapply(as.DNAbin) %>%
mclapply(dist.dna) %>%
mclapply(upgma) %>%
mclapply(write.tree)
data <- data.frame(as.character(divisive), as.character(agglomerative),
as.character(nj_trees))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
agg_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.agglomerative., function(x) read.tree(text = as.character(x))))
# nj_distance <- mapply(RobinsonFoulds,
#        lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
#        lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))))
diagnostics <- data.frame(as.numeric(div_distance),
as.numeric(agg_distance))
index <- which(diagnostics$as.numeric.div_distance. + diagnostics$as.numeric.agg_distance. == 0)
index
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
nj_lengths
d_lengths
sequences <- mclapply(s_file_names,
ReadCharacters)
s_file_names
s_file_names <- paste("/TN93_Jul7/SequenceData/100_16_",1:100,".nex", sep = "")
sequences <- mclapply(s_file_names,
ReadCharacters)
ReadCharacters(s_file_names[[1]])
sequences <- mclapply(s_file_names,
function(x) ReadCharacters(read_file(paste(getwd(), x, sep = ""))))
nj_trees <- nj_trees <- sequences %>%
mclapply(as.DNAbin) %>%
mclapply(dist.dna) %>%
mclapply(nj) %>%
mclapply(write.tree)
View(sequences)
ReadCharacters("TN93_Jul7/SequenceData/100_16_1.nex")
s_file_names <- paste("TN93_Jul7/SequenceData/100_16_",1:100,".nex", sep = "")
sequences <- mclapply(s_file_names,
ReadCharacters)
View(sequences)
View(sequences)
nj_trees <- nj_trees <- sequences %>%
mclapply(as.DNAbin) %>%
mclapply(dist.dna) %>%
mclapply(nj) %>%
mclapply(write.tree)
data <- data.frame(as.character(divisive), as.character(agglomerative),
as.character(nj_trees))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
agg_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.agglomerative., function(x) read.tree(text = as.character(x))))
# nj_distance <- mapply(RobinsonFoulds,
#        lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
#        lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))))
diagnostics <- data.frame(as.numeric(div_distance),
as.numeric(agg_distance))
index <- which(diagnostics$as.numeric.div_distance. + diagnostics$as.numeric.agg_distance. == 0)
read.tree(text = nj_trees[[5]])$edge.length
read.tree(text = divisive[[5]])$edge.length
sequences <- mclapply(s_file_names,
ReadCharacters)
nj_trees <- nj_trees <- sequences %>%
mclapply(as.DNAbin) %>%
mclapply(dist.dna) %>%
mclapply(nj) %>%
mclapply(write.tree)
data <- data.frame(as.character(divisive), as.character(agglomerative),
as.character(nj_trees))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
agg_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.agglomerative., function(x) read.tree(text = as.character(x))))
# nj_distance <- mapply(RobinsonFoulds,
#        lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
#        lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))))
diagnostics <- data.frame(as.numeric(div_distance),
as.numeric(agg_distance))
div_distance
agg_distance
d_file_names <- paste("/TN93_Jul7/DivisiveTrees/100_16_",1:100,".txt", sep = "")
a_file_names <- paste("/TN93_Jul7/AgglomerativeTrees/100_16_",1:100,".txt", sep = "")
s_file_names <- paste("TN93_Jul7/SequenceData/100_16_",1:100,".nex", sep = "")
divisive <- mclapply(d_file_names,
function(x) substr(read_file(paste(getwd(), x, sep = "")),
1,
nchar(read_file(paste(getwd(), x, sep = "")))-2))
agglomerative <- mclapply(a_file_names,
function(x) substr(read_file(paste(getwd(), x, sep = "")),
1,
nchar(read_file(paste(getwd(), x, sep = "")))-1))
sequences <- mclapply(s_file_names,
ReadCharacters)
nj_trees <- nj_trees <- sequences %>%
mclapply(as.DNAbin) %>%
mclapply(dist.dna) %>%
mclapply(nj) %>%
mclapply(write.tree)
data <- data.frame(as.character(divisive), as.character(agglomerative),
as.character(nj_trees))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
agg_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.agglomerative., function(x) read.tree(text = as.character(x))))
# nj_distance <- mapply(RobinsonFoulds,
#        lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
#        lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))))
diagnostics <- data.frame(as.numeric(div_distance),
as.numeric(agg_distance))
diagnostics
index <- which(diagnostics$as.numeric.div_distance. + diagnostics$as.numeric.agg_distance. == 0)
index
read.tree(text = nj_trees[[7]])$edge.length
read.tree(text = divisive[[7]])$edge.length
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
plot(read.tree(text = divisive[[7]]))
plot(read.tree(text = nj_trees[[7]]))
plot(read.tree(text = divisive[[7]]))
plot(read.tree(text = nj_trees[[7]]))
plot(read.tree(text = divisive[[7]]))
nj_trees <- nj_trees <- sequences %>%
mclapply(as.DNAbin) %>%
mclapply(dist.dna) %>%
mclapply(upgma) %>%
mclapply(write.tree)
data <- data.frame(as.character(divisive), as.character(agglomerative),
as.character(nj_trees))
div_distance  <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.divisive., function(x) read.tree(text = as.character(x))))
agg_distance <- mapply(RobinsonFoulds,
lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))),
lapply(data$as.character.agglomerative., function(x) read.tree(text = as.character(x))))
# nj_distance <- mapply(RobinsonFoulds,
#        lapply(data$as.character.trees., function(x) read.tree(text = as.character(x))),
#        lapply(data$as.character.nj_trees., function(x) read.tree(text = as.character(x))))
diagnostics <- data.frame(as.numeric(div_distance),
as.numeric(agg_distance))
index <- which(diagnostics$as.numeric.div_distance. + diagnostics$as.numeric.agg_distance. == 0)
index
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
plot(read.tree(text = nj_trees[[7]]))
plot(read.tree(text = divisive[[7]]))
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
points(nj_lengths, d_lengths)
}
i <- index[1]
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
points(nj_lengths, d_lengths)
}
# i <- index[1]
# nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
#     d_lengths <- read.tree(text = divisive[[i]])$edge.length
#     plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
}
?plot()
plot(read.tree(text = nj_trees[[7]]))
edgelabels(read.tree(text = nj_trees[[7]])$edge.length)
plot(read.tree(text = divisive[[7]]))
edgelabels(read.tree(text = divisive[[7]])$edge.length)
plot(read.tree(text = divisive[[7]]))
edgelabels(read.tree(text = divisive[[7]])$edge.length, font= 2 )
plot(read.tree(text = divisive[[7]]))
edgelabels(read.tree(text = divisive[[7]])$edge.length, font= 1)
plot(read.tree(text = divisive[[7]]))
edgelabels(read.tree(text = divisive[[7]])$edge.length, font= 0.5)
plot(read.tree(text = divisive[[7]]))
#edgelabels(read.tree(text = divisive[[7]])$edge.length, font= 0.5)
plot(read.tree(text = divisive[[7]]))
edgelabels(read.tree(text = divisive[[7]])$edge.length, font= 0.5)
read.tree(text = divisive[[7]])$edge.length
read.tree(text = nj_trees[[7]])$edge.length
plot(read.tree(text = nj_trees[[7]]))
edgelabels(read.tree(text = nj_trees[[7]])$edge.length, font= 0.5)
signif(read.tree(text = divisive[[7]])$edge.length, digits = 6)
signif(read.tree(text = divisive[[7]])$edge.length, digits = 2)
signif(read.tree(text = divisive[[7]])$edge.length, digits = 4)
plot(read.tree(text = nj_trees[[7]]))
edgelabels(signif(read.tree(text = divisive[[7]])$edge.length, digits = 4), font= 0.5)
plot(read.tree(text = divisive[[7]]))
edgelabels(signif(read.tree(text = divisive[[7]])$edge.length, digits = 4), font= 0.5)
read.tree(text = divisive[[7]])$edge.length
read.tree(text = nj_trees[[7]])$edge.length
plot(read.tree(text = divisive[[7]]))
#edgelabels(signif(read.tree(text = divisive[[7]])$edge.length, digits = 4), font= 0.5)
plot(read.tree(text = divisive[[7]]))
edgelabels(signif(read.tree(text = divisive[[7]])$edge.length, digits = 4), font= 0.5)
# i <- index[1]
# nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
#     d_lengths <- read.tree(text = divisive[[i]])$edge.length
#     plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths, type = "b")
}
# i <- index[1]
# nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
#     d_lengths <- read.tree(text = divisive[[i]])$edge.length
#     plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
}
# i <- index[1]
# nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
#     d_lengths <- read.tree(text = divisive[[i]])$edge.length
#     plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths, type = "b")
}
# i <- index[1]
# nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
#     d_lengths <- read.tree(text = divisive[[i]])$edge.length
#     plot(nj_lengths, d_lengths)
cl <- rainbow(length(index))
for (i in index){
nj_lengths <- read.tree(text = nj_trees[[i]])$edge.length
d_lengths <- read.tree(text = divisive[[i]])$edge.length
plot(nj_lengths, d_lengths)
}
